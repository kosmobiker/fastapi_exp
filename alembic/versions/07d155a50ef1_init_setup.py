"""init-setup

Revision ID: 07d155a50ef1
Revises: 
Create Date: 2025-08-02 11:08:17.521246

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '07d155a50ef1'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('feature_store',
    sa.Column('id', sa.UUID(), nullable=False, comment="User's identifier"),
    sa.Column('income', sa.Float(), nullable=False, comment='Annual income in decile form [0.1, 0.9]'),
    sa.Column('name_email_similarity', sa.Float(), nullable=False, comment='Similarity between email and name [0, 1]'),
    sa.Column('prev_address_months_count', sa.Integer(), nullable=True, comment='Months in previous address [-1, 380], -1 = missing'),
    sa.Column('current_address_months_count', sa.Integer(), nullable=True, comment='Months in current address [-1, 429], -1 = missing'),
    sa.Column('customer_age', sa.Integer(), nullable=False, comment='Age in years, rounded to decade [10, 90]'),
    sa.Column('days_since_request', sa.Integer(), nullable=False, comment='Days since application [0, 79]'),
    sa.Column('intended_balcon_amount', sa.Float(), nullable=True, comment='Initial transfer amount [-16, 114], negatives = missing'),
    sa.Column('zip_count_4w', sa.Integer(), nullable=False, comment='Applications in same zip (4 weeks) [1, 6830]'),
    sa.Column('velocity_6h', sa.Float(), nullable=False, comment='Applications velocity (6 hours) [-175, 16818]'),
    sa.Column('velocity_24h', sa.Float(), nullable=False, comment='Applications velocity (24 hours) [1297, 9586]'),
    sa.Column('velocity_4w', sa.Float(), nullable=False, comment='Applications velocity (4 weeks) [2825, 7020]'),
    sa.Column('bank_branch_count_8w', sa.Integer(), nullable=False, comment='Branch applications (8 weeks) [0, 2404]'),
    sa.Column('date_of_birth_distinct_emails_4w', sa.Integer(), nullable=False, comment='Emails with same DOB (4 weeks) [0, 39]'),
    sa.Column('credit_risk_score', sa.Float(), nullable=False, comment='Internal risk score [-191, 389]'),
    sa.Column('bank_months_count', sa.Integer(), nullable=True, comment='Previous account age in months [-1, 32], -1 = missing'),
    sa.Column('proposed_credit_limit', sa.Float(), nullable=False, comment='Proposed credit limit [200, 2000]'),
    sa.Column('session_length_in_minutes', sa.Float(), nullable=True, comment='Session length [-1, 107], -1 = missing'),
    sa.Column('device_distinct_emails', sa.Integer(), nullable=True, comment='Distinct emails from device (8 weeks) [-1, 2], -1 = missing'),
    sa.Column('device_fraud_count', sa.Integer(), nullable=False, comment='Fraudulent applications from device [0, 1]'),
    sa.Column('month', sa.Integer(), nullable=False, comment='Application month [0, 7]'),
    sa.Column('payment_type', sa.String(length=50), nullable=False, comment='Credit payment plan type (5 anonymized values)'),
    sa.Column('employment_status', sa.String(length=50), nullable=False, comment='Employment status (7 anonymized values)'),
    sa.Column('housing_status', sa.String(length=50), nullable=False, comment='Residential status (7 anonymized values)'),
    sa.Column('source', sa.String(length=20), nullable=False, comment='Application source: INTERNET or TELEAPP'),
    sa.Column('device_os', sa.String(length=20), nullable=False, comment='Device OS: Windows, macOS, Linux, X11, other'),
    sa.Column('email_is_free', sa.Boolean(), nullable=False, comment='Email domain type (free or paid)'),
    sa.Column('phone_home_valid', sa.Boolean(), nullable=False, comment='Home phone validity'),
    sa.Column('phone_mobile_valid', sa.Boolean(), nullable=False, comment='Mobile phone validity'),
    sa.Column('has_other_cards', sa.Boolean(), nullable=False, comment='Has other cards from same bank'),
    sa.Column('foreign_request', sa.Boolean(), nullable=False, comment='Request from different country'),
    sa.Column('keep_alive_session', sa.Boolean(), nullable=False, comment='Session logout option'),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feature_store_id'), 'feature_store', ['id'], unique=False)
    op.create_table('predictions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('feature_store_id', sa.UUID(), nullable=False),
    sa.Column('predicted_fraud', sa.Boolean(), nullable=False, comment='Model prediction: fraud or not fraud'),
    sa.Column('fraud_probability', sa.Float(), nullable=False, comment='Probability score [0.0, 1.0]'),
    sa.Column('confidence_score', sa.Float(), nullable=True, comment='Model confidence in prediction [0.0, 1.0]'),
    sa.Column('model_name', sa.String(length=100), nullable=False, comment='Name/identifier of the model used'),
    sa.Column('model_version', sa.String(length=50), nullable=False, comment='Version of the model'),
    sa.Column('model_type', sa.String(length=50), nullable=True, comment='Type of model (e.g., RandomForest, XGBoost, NN)'),
    sa.Column('prediction_time_ms', sa.Float(), nullable=True, comment='Time taken for prediction in milliseconds'),
    sa.Column('risk_category', sa.String(length=20), nullable=True, comment='Risk level: LOW, MEDIUM, HIGH, CRITICAL'),
    sa.Column('action_recommended', sa.String(length=50), nullable=True, comment='Recommended action: APPROVE, REVIEW, REJECT'),
    sa.Column('is_validated', sa.Boolean(), nullable=True, comment='Has this prediction been validated?'),
    sa.Column('actual_fraud', sa.Boolean(), nullable=True, comment='Actual fraud outcome (for model feedback)'),
    sa.Column('validation_date', sa.DateTime(), nullable=True, comment='When validation was performed'),
    sa.Column('validation_source', sa.String(length=50), nullable=True, comment='Source of validation (manual, automated, etc.)'),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['feature_store_id'], ['feature_store.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_predictions_feature_store_id'), 'predictions', ['feature_store_id'], unique=False)
    op.create_index(op.f('ix_predictions_id'), 'predictions', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_predictions_id'), table_name='predictions')
    op.drop_index(op.f('ix_predictions_feature_store_id'), table_name='predictions')
    op.drop_table('predictions')
    op.drop_index(op.f('ix_feature_store_id'), table_name='feature_store')
    op.drop_table('feature_store')
    # ### end Alembic commands ###
